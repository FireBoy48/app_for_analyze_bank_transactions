from unittest.mock import patch

import pandas as pd

from config import path_to_data
from src.services import easy_search, transfers_by_individuals


@patch("src.services.read_xlsx")
def test_easy_search(mock_df):
    mock_df.return_value = pd.DataFrame(
        [
            {
                "Дата операции": "31.12.2021 00:12:53",
                "Дата платежа": "31.12.2021",
                "Номер карты": None,
                "Статус": "OK",
                "Сумма операции": -800.0,
                "Валюта операции": "RUB",
                "Сумма платежа": -800.0,
                "Валюта платежа": "RUB",
                "Кэшбэк": None,
                "Категория": "Переводы",
                "MCC": None,
                "Описание": "Константин Л.",
                "Бонусы (включая кэшбэк)": 0,
                "Округление на инвесткопилку": 0,
                "Сумма операции с округлением": 800.0,
            },
            {
                "Дата операции": "30.12.2021 22:22:03",
                "Дата платежа": "31.12.2021",
                "Номер карты": None,
                "Статус": "OK",
                "Сумма операции": -20000.0,
                "Валюта операции": "RUB",
                "Сумма платежа": -20000.0,
                "Валюта платежа": "RUB",
                "Кэшбэк": None,
                "Категория": "Разводы",
                "MCC": None,
                "Описание": "Константин Л.",
                "Бонусы (включая кэшбэк)": 0,
                "Округление на инвесткопилку": 0,
                "Сумма операции с округлением": 20000.0,
            },
            {
                "Дата операции": "10.01.2018 12:41:24",
                "Дата платежа": "10.01.2018",
                "Номер карты": "*5441",
                "Статус": "FAILED",
                "Сумма операции": -87068.0,
                "Валюта операции": "RUB",
                "Сумма платежа": -87068.0,
                "Валюта платежа": "RUB",
                "Кэшбэк": None,
                "Категория": None,
                "MCC": None,
                "Описание": "Перевод с карты",
                "Бонусы (включая кэшбэк)": 0,
                "Округление на инвесткопилку": 0,
                "Сумма операции с округлением": 87068.0,
            },
        ]
    )
    assert easy_search(path_to_data, "Переводы") == [
        {
            "Дата операции": "31.12.2021 00:12:53",
            "Дата платежа": "31.12.2021",
            "Номер карты": None,
            "Статус": "OK",
            "Сумма операции": -800.0,
            "Валюта операции": "RUB",
            "Сумма платежа": -800.0,
            "Валюта платежа": "RUB",
            "Кэшбэк": None,
            "Категория": "Переводы",
            "MCC": None,
            "Описание": "Константин Л.",
            "Бонусы (включая кэшбэк)": 0,
            "Округление на инвесткопилку": 0,
            "Сумма операции с округлением": 800.0,
        }
    ]
    mock_df.assert_called_once_with(path_to_data)


@patch("src.services.easy_search")
def test_transfers_by_individuals(mock_func):
    mock_func.return_value = [
        {
            "Дата операции": "31.12.2021 00:12:53",
            "Дата платежа": "31.12.2021",
            "Номер карты": None,
            "Статус": "OK",
            "Сумма операции": -800.0,
            "Валюта операции": "RUB",
            "Сумма платежа": -800.0,
            "Валюта платежа": "RUB",
            "Кэшбэк": None,
            "Категория": "Переводы",
            "MCC": None,
            "Описание": "Константин Л.",
            "Бонусы (включая кэшбэк)": 0,
            "Округление на инвесткопилку": 0,
            "Сумма операции с округлением": 800.0,
        },
        {
            "Дата операции": "30.12.2021 22:22:03",
            "Дата платежа": "31.12.2021",
            "Номер карты": None,
            "Статус": "OK",
            "Сумма операции": -20000.0,
            "Валюта операции": "RUB",
            "Сумма платежа": -20000.0,
            "Валюта платежа": "RUB",
            "Кэшбэк": None,
            "Категория": "Переводы",
            "MCC": None,
            "Описание": "Константин Л.",
            "Бонусы (включая кэшбэк)": 0,
            "Округление на инвесткопилку": 0,
            "Сумма операции с округлением": 20000.0,
        },
        {
            "Дата операции": "10.01.2018 12:41:24",
            "Дата платежа": "10.01.2018",
            "Номер карты": "*5441",
            "Статус": "FAILED",
            "Сумма операции": -87068.0,
            "Валюта операции": "RUB",
            "Сумма платежа": -87068.0,
            "Валюта платежа": "RUB",
            "Кэшбэк": None,
            "Категория": None,
            "MCC": None,
            "Описание": "Переводы с карты",
            "Бонусы (включая кэшбэк)": 0,
            "Округление на инвесткопилку": 0,
            "Сумма операции с округлением": 87068.0,
        },
    ]
    assert transfers_by_individuals(path_to_data) == [
        {
            "Дата операции": "31.12.2021 00:12:53",
            "Дата платежа": "31.12.2021",
            "Номер карты": None,
            "Статус": "OK",
            "Сумма операции": -800.0,
            "Валюта операции": "RUB",
            "Сумма платежа": -800.0,
            "Валюта платежа": "RUB",
            "Кэшбэк": None,
            "Категория": "Переводы",
            "MCC": None,
            "Описание": "Константин Л.",
            "Бонусы (включая кэшбэк)": 0,
            "Округление на инвесткопилку": 0,
            "Сумма операции с округлением": 800.0,
        },
        {
            "Дата операции": "30.12.2021 22:22:03",
            "Дата платежа": "31.12.2021",
            "Номер карты": None,
            "Статус": "OK",
            "Сумма операции": -20000.0,
            "Валюта операции": "RUB",
            "Сумма платежа": -20000.0,
            "Валюта платежа": "RUB",
            "Кэшбэк": None,
            "Категория": "Переводы",
            "MCC": None,
            "Описание": "Константин Л.",
            "Бонусы (включая кэшбэк)": 0,
            "Округление на инвесткопилку": 0,
            "Сумма операции с округлением": 20000.0,
        },
    ]
    mock_func.assert_called_once_with(path_to_data, "Переводы")
