import os
from pathlib import Path

import pandas as pd

from config import ROOT_DIR
from src.reports import reports_file, spending_by_weekday


def test_reports_file():
    @reports_file("test.txt")
    def decor_test():
        return 1

    assert decor_test() == 1
    path_to_fake = Path.joinpath(ROOT_DIR, "reports", "test.txt")
    with open(path_to_fake, "r") as f:
        assert str(f.read().strip()) == "1"
    os.remove(path_to_fake)


def test_spending_by_weekday():
    fake_df = pd.DataFrame(
        [
            {
                "Дата операции": "30.01.2021 00:12:53",
                "Дата платежа": "30.01.2021",
                "Номер карты": None,
                "Статус": "OK",
                "Сумма операции": -800.0,
                "Валюта операции": "RUB",
                "Сумма платежа": -800.0,
                "Валюта платежа": "RUB",
                "Кэшбэк": None,
                "Категория": "Переводы",
                "MCC": None,
                "Описание": "Константин Л.",
                "Бонусы (включая кэшбэк)": 0,
                "Округление на инвесткопилку": 0,
                "Сумма операции с округлением": 800.0,
            },
            {
                "Дата операции": "30.12.2021 22:22:03",
                "Дата платежа": "31.12.2021",
                "Номер карты": None,
                "Статус": "OK",
                "Сумма операции": -20000.0,
                "Валюта операции": "RUB",
                "Сумма платежа": -20000.0,
                "Валюта платежа": "RUB",
                "Кэшбэк": None,
                "Категория": "Переводы",
                "MCC": None,
                "Описание": "Константин Л.",
                "Бонусы (включая кэшбэк)": 0,
                "Округление на инвесткопилку": 0,
                "Сумма операции с округлением": 20000.0,
            },
            {
                "Дата операции": "30.01.2021 12:41:24",
                "Дата платежа": "30.01.2021",
                "Номер карты": "*5441",
                "Статус": "FAILED",
                "Сумма операции": -87068.0,
                "Валюта операции": "RUB",
                "Сумма платежа": -87068.0,
                "Валюта платежа": "RUB",
                "Кэшбэк": None,
                "Категория": None,
                "MCC": None,
                "Описание": "Переводы с карты",
                "Бонусы (включая кэшбэк)": 0,
                "Округление на инвесткопилку": 0,
                "Сумма операции с округлением": 87068.0,
            },
        ]
    )
    day = "30.01.2021"
    assert spending_by_weekday(fake_df, day).to_dict(orient="records") == [
        {
            "Дата операции": "30.01.2021 00:12:53",
            "Дата платежа": "30.01.2021",
            "Номер карты": None,
            "Статус": "OK",
            "Сумма операции": -800.0,
            "Валюта операции": "RUB",
            "Сумма платежа": -800.0,
            "Валюта платежа": "RUB",
            "Кэшбэк": None,
            "Категория": "Переводы",
            "MCC": None,
            "Описание": "Константин Л.",
            "Бонусы (включая кэшбэк)": 0,
            "Округление на инвесткопилку": 0,
            "Сумма операции с округлением": 800.0,
        },
        {
            "Дата операции": "30.01.2021 12:41:24",
            "Дата платежа": "30.01.2021",
            "Номер карты": "*5441",
            "Статус": "FAILED",
            "Сумма операции": -87068.0,
            "Валюта операции": "RUB",
            "Сумма платежа": -87068.0,
            "Валюта платежа": "RUB",
            "Кэшбэк": None,
            "Категория": None,
            "MCC": None,
            "Описание": "Переводы с карты",
            "Бонусы (включая кэшбэк)": 0,
            "Округление на инвесткопилку": 0,
            "Сумма операции с округлением": 87068.0,
        },
    ]
